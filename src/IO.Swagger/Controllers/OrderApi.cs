/*
 * SimpleKart E-commerce API
 *
 * API for an imaginary E-Commerce store to demonstrate API Builder capabilities in Postman
 *
 * OpenAPI spec version: 1.0.0
 * Contact: simplekart@postman.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class OrderApiController : ControllerBase
    { 
        /// <summary>
        /// Get order details from database
        /// </summary>
        /// <remarks>Obtain item details from the database</remarks>
        /// <param name="orderId"></param>
        /// <response code="200">OK - Successfully obtained order details</response>
        /// <response code="400">Bad Request - Invalid order ID supplied</response>
        /// <response code="404">Not Found - Order not found</response>
        [HttpGet]
        [Route("/orders/{orderId}")]
        [ValidateModelState]
        [SwaggerOperation("GetOrdersOrderId")]
        [SwaggerResponse(statusCode: 200, type: typeof(Order), description: "OK - Successfully obtained order details")]
        [SwaggerResponse(statusCode: 400, type: typeof(BadRequest), description: "Bad Request - Invalid order ID supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(NotFound), description: "Not Found - Order not found")]
        public virtual IActionResult GetOrdersOrderId([FromRoute][Required][Range(1, 2000)]int? orderId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Order));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(BadRequest));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(NotFound));
            string exampleJson = null;
            exampleJson = "{\n  \"address\" : \"address\",\n  \"orderId\" : 1151,\n  \"orderDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"items\" : \"6\",\n  \"orderTotal\" : 5000,\n  \"arrivalDate\" : \"2000-01-23T04:56:07.000+00:00\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Order>(exampleJson)
                        : default(Order);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
