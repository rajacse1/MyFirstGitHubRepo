/*
 * SimpleKart E-commerce API
 *
 * API for an imaginary E-Commerce store to demonstrate API Builder capabilities in Postman
 *
 * OpenAPI spec version: 1.0.0
 * Contact: simplekart@postman.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ItemApiController : ControllerBase
    { 
        /// <summary>
        /// Get item details from the database 
        /// </summary>
        /// <remarks>Obtain item details from item database</remarks>
        /// <param name="itemId">Id of the item to pull details of</param>
        /// <response code="200">OK - Successfully obtained order details</response>
        /// <response code="400">Bad Request - Invalid item ID supplied</response>
        /// <response code="404">Not Found - Item not found</response>
        [HttpGet]
        [Route("/items/{itemId}")]
        [ValidateModelState]
        [SwaggerOperation("GetItemsItemId")]
        [SwaggerResponse(statusCode: 200, type: typeof(Item), description: "OK - Successfully obtained order details")]
        [SwaggerResponse(statusCode: 400, type: typeof(BadRequest), description: "Bad Request - Invalid item ID supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(NotFound), description: "Not Found - Item not found")]
        public virtual IActionResult GetItemsItemId([FromRoute][Required][Range(0, 20000)]int? itemId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Item));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(BadRequest));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(NotFound));
            string exampleJson = null;
            exampleJson = "{\n  \"itemId\" : 1657,\n  \"price\" : 2096,\n  \"name\" : \"Smart WiFi Router\",\n  \"description\" : \"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Item>(exampleJson)
                        : default(Item);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
